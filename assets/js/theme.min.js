!(function (e) {
    var t = e("body"),
        o = e(document),
        a = (e("html"), e(window));
    a.width();
    o.ready(() => {
        s.ready();
}),
        a.resize(() => {
            s.resize();
}),
(window.onload = function () {
    s.init();
});
var s = {
    bm3Timeout: null,
    ready: function () {
        s.setActiveViewModeMediaQuery();
    },
    resize: function () {
        s.setActiveViewModeMediaQuery();
    },
    init: function () {
        this.initSliderBanner(),
            this.initSliderBannerWidthText(),
            this.initSliderProduct(),
            this.initSliderProductWidthBanner(),
            this.initDropdownColumns(),
            this.initPopupRecentlyViewed(),
            this.initCloseAnnouncementBar(),
            this.initHeaderSticky(),
            this.initSliderAnnouncementBar(),
            this.initDropdown(),
            this.initOpenSearchForm(),
            this.initDynamicBrowserTabTitle(),
            this.initSidebarLogin(),
            this.initSidebarLangCurrency(),
            this.initSidebarCart(),
            this.initSidebarSearch(),
            this.initGlobalCheckbox(),
            this.initNotifyInStock(),
            this.initQuickShop(),
            this.initQuickAddToCard(),
            this.initEditQuickCart(),
            this.initNewsLetterPopup(),
            this.initAccountPopup(),
            this.initSliderAboutUs(),
            this.initSlideShow(),
            this.initClickedActiveVideoBanner(),
            this.initShowPopupShare(),
            this.initShowPopup(),
            this.initCountdown(),
            this.initCartCountDown(),
            this.initProductCustomerViewing(),
            this.initProductSizeChart(),
            this.initProductQuickView(),
            this.initProductAskAnExpert(),
            this.initCardSwatch(),
            this.initZoomImage(),
            this.initProductImageGallery(),
            this.initWishlistActive(),
            this.initUpdateValueQuantity(),
            this.initMenuMobile(),
            this.initShowPopupLookBook(),
            this.initShowPopupSearch(),
            this.initToggleSidebarMobile(),
            this.initPriceRangeFilter(),
            this.initCollapseSidebarBlock(),
            this.initBeforeYouLeave(),
            this.initNotification(),
            this.initProductVariantChange(),
            this.initCloseAcceptCookie(),
            this.intiShowItemGallery(),
            this.initProductCompareColor(),
            this.initShuffleFilter(),
            t.hasClass("template-product") && (this.initProductNextPrev(), this.initProductBUndle(), this.initShowCustomReview(), this.initStickyAddToCart(), this.initOpenTabsProduct(), this.initSidebarLocalPickUp()),
            t.hasClass("template-collection") && (this.initAddEventViewModeLayout(), this.initToolbar());
    },
    initSliderBanner: function () {
        e("[data-banner-carousel]").each(function () {
            var t = e(this),
                o = t.find(".bm3-row-carousel"),
                a = t.data("item-to-show"),
                x = t.data("item-infinity"),
                p = t.data("item-play"),
                i = t.data("item-dots"),
                s = t.data("item-dots-mb"),
                n = t.data("item-arrows"),
                m = t.data("item-arrows-mb"),
                r = '<i class="fa-solid fa-chevron-right"></i>',
                l = '<i class="fa-solid fa-chevron-left"></i>';
            o.length > 0 &&
                (o.hasClass("slick-initialized") ||
                    o.slick({
                        mobileFirst: true,
                        adaptiveHeight: false,
                        infinite: x,
                        vertical: false,
                        slidesToShow: 2,
                        slidesToScroll: 1,
                        autoplay: p,
                        autoplaySpeed: 3e3,
                        dots: s,
                        arrows: m,
                        nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                        prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                        responsive: [
                            { breakpoint: 1300, settings: { dots: i, arrows: n, slidesToShow: a, slidesToScroll: 1 } },
                            { breakpoint: 767, settings: { dots: i, arrows: n, slidesToShow: 3, slidesToScroll: 1 } },
                        ],
                    }));
        });
    },
    initSliderBannerWidthText: function () {
        e("[data-banner-text-carousel]").each(function () {
            var t = e(this),
                o = t.find(".row"),
                a = t.data("item-to-show"),
                i = t.data("item-dots"),
                s = t.data("item-dots-mb"),
                n = t.data("item-arrows"),
                m = t.data("item-arrows-mb"),
                r = '<i class="fa-solid fa-chevron-right"></i>',
                l = '<i class="fa-solid fa-chevron-left"></i>';
            o.length > 0 &&
                (o.hasClass("slick-initialized") ||
                    o.slick({
                        mobileFirst: true,
                        adaptiveHeight: false,
                        infinite: true,
                        vertical: false,
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        centerMode: true,
                        dots: s,
                        arrows: m,
                        nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                        prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                        responsive: [
                            { breakpoint: 1300, settings: { dots: i, arrows: n, slidesToShow: a, slidesToScroll: 1 } },
                            {
                                breakpoint: 1024,
                                settings: {
                                    get slidesToShow() {
                                        return (this.slidesToShow = a > 3 ? a - 1 : a);
                                    },
                                    dots: i,
                                    arrows: n,
                                    slidesToScroll: 1,
                                },
                            },
                            { breakpoint: 552, settings: { dots: s, arrows: m, slidesToShow: 2, slidesToScroll: 1 } },
                        ],
                    }));
        });
    },
    initSliderProduct: function () {
        e("[data-product-carousel]").each(function () {
            var t = e(this),
                o = t.find(".row"),
                a = t.data("item-to-show"),
                i = t.data("item-dots"),
                s = t.data("item-dots-mb"),
                n = t.data("item-arrows"),
                m = t.data("item-arrows-mb"),
                r = '<i class="fa-solid fa-chevron-right"></i>',
                l = '<i class="fa-solid fa-chevron-left"></i>';
            o.length > 0 &&
                (o.hasClass("slick-initialized") ||
                    (t.hasClass("custom-product-carousel")
                        ? o.slick({
                            mobileFirst: true,
                            adaptiveHeight: false,
                            infinite: true,
                            vertical: false,
                            centerMode: true,
                            slidesToShow: 1,
                            slidesToScroll: 1,
                            dots: s,
                            arrows: m,
                            nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                            prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                            responsive: [{ breakpoint: 552, settings: { dots: i, arrows: n } }],
                        })
                        : o.slick({
                            mobileFirst: true,
                            adaptiveHeight: false,
                            infinite: true,
                            vertical: false,
                            centerMode: true,
                            slidesToShow: 2,
                            slidesToScroll: 1,
                            dots: s,
                            arrows: m,
                            nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                            prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                            responsive: [
                                { breakpoint: 552, settings: { dots: s, arrows: m, slidesToShow: 3, slidesToScroll: 1 } },
                                { breakpoint: 1100, settings: { dots: i, arrows: n, slidesToShow: 4, slidesToScroll: 1 } },
                                { breakpoint: 1300, settings: { dots: i, arrows: n, slidesToShow: a, slidesToScroll: 1 } },
                            ],
                        })));
        });
    },
    initSliderProductWidthBanner: function () {
        e("[data-product-width-banner-carousel]").each(function () {
            var t = e(this),
                o = t.find(".row"),
                a = t.data("item-to-show"),
                i = t.data("item-dots"),
                s = t.data("item-dots-mb"),
                n = t.data("item-arrows"),
                m = t.data("item-arrows-mb"),
                r = '<i class="fa-solid fa-chevron-right"></i>',
                l = '<i class="fa-solid fa-chevron-left"></i>';
            o.length > 0 &&
                (o.hasClass("slick-initialized") ||
                    o.slick({
                        mobileFirst: true,
                        adaptiveHeight: false,
                        infinite: false,
                        vertical: false,
                        slidesToShow: 2,
                        slidesToScroll: 1,
                        dots: s,
                        arrows: m,
                        nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                        prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                        responsive: [{ breakpoint: 1300, settings: { dots: i, arrows: n, slidesToShow: a, slidesToScroll: 1 } }],
                    }));
        });
    },
    initDropdownColumns: function () {
        var e = document.querySelectorAll("[data-toggle-column]");
        if (e.length)
            for (i = 0; i < e.length; i++)
                !(function (t) {
                    e[t].addEventListener("click", (e) => {
                        var t = e.currentTarget,
                        o = t.nextElementSibling;
                    t.classList.toggle("is-clicked"), o.classList.toggle("is-active"), o.style.maxHeight ? (o.style.maxHeight = null) : (o.style.maxHeight = o.scrollHeight + "px");
                });
    })(i);
},
initPopupRecentlyViewed: function () {
    var a = e(".recently-viewed-icon.open-popup"),
        i = e(".recently-viewed-icon.scroll-to-top"),
        s = e("[data-open-newsletter-popup]");
    a.on("click", (t) => {
        t.preventDefault(), t.stopPropagation();
    var o = e(t.currentTarget),
        a = o.data("target");
    o.hasClass("is-open")
        ? (e(".recently-viewed-icon").removeClass("is-open"), e(".recently-viewed-tab").removeClass("is-visible"))
        : (e(".recently-viewed-icon").removeClass("is-open"), e(".recently-viewed-tab").removeClass("is-visible"), o.addClass("is-open"), document.getElementById(a).classList.add("is-visible"));
}),
                s.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.addClass("newsletter-show");
}),
o.on("click", (t) => {
    e(".recently-viewed-icon").removeClass("is-open"), e(".recently-viewed-tab").removeClass("is-visible");
}),
i.on("click.scrollTop", (t) => (t.preventDefault(), t.stopPropagation(), e("html, body").animate({ scrollTop: 0 }, 0), !1));
},
initCloseAnnouncementBar: function () {
    var t = e(".announcement-bar__message"),
        o = t.find("[data-close-announcement");
    t.css("opacity", 1),
        o.off("click.closeHeaderTop").on("click.closeHeaderTop", function (e) {
            e.preventDefault(), e.stopPropagation(), t.remove();
        });
},
initSliderAnnouncementBar: function () {
    var t = e("[data-announcement-bar-carousel]"),
        o = t.find(".message");
    (rArrow = '<i class="fa-solid fa-chevron-right"></i>'),
    (lArrow = '<i class="fa-solid fa-chevron-left"></i>'),
        t.length > 0 &&
            (o.hasClass("slick-initialized") ||
                (console.log("announcement_item", o),
                o.slick({
                    infinite: true,
                    vertical: true,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    dots: false,
                    arrows: true,
                    autoplay: true,
                    autoplaySpeed: 3e3,
                    nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + rArrow + "</button>",
                    prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + lArrow + "</button>",
                })));
},
initHeaderSticky: function () {
    var t,
        o,
        a = e("[data-header-sticky]");
    (o = a.height()), (t = a.offset().top + a.outerHeight(!0)), a.length > 0 && s.stickyScroll(a, t, o, "has-stickyHeader");
},
stickyScroll: function (i, s, n, r) {
    var l = 0;
    a.on("scroll load", () => {
        var c = a.scrollTop();
    e(".dropdown-language_currency").removeClass("show"),
        Math.abs(l - c) <= n ||
            (c > l && c > s
                ? (i.removeClass("sticky-down").addClass("sticky-up "), t.addClass(r))
                : c + a.height() < o.height() && (i.removeClass("sticky-up").addClass("sticky-down"), c > s ? t.addClass(r) : (t.removeClass(r), i.removeClass("sticky-up sticky-down"))),
            (l = c));
});
},
initDropdown: function () {
    o.on("click", "[data-dropdown-toggle]", (t) => {
        e(t.currentTarget).find(".bm3-dropdown").hasClass("show") ? e(".bm3-dropdown").removeClass("show") : (e(".bm3-dropdown").removeClass("show"), e(t.currentTarget).find(".bm3-dropdown").toggleClass("show"));
}),
                o.on("click", (t) => {
                    e(".bm3-dropdown").hasClass("show") && 0 === e(t.target).closest("[data-dropdown-toggle]").length && e(".bm3-dropdown").removeClass("show");
});
},
initOpenSearchForm: function () {
    var a = e(".header-search__form .header-search__input"),
        i = a.parents(".header-search").find(".quickSearchResultsWrap");
    (btnClose = e(".background-header-search, .bm3-search-close")),
        a.focus(function () {
            i.addClass("show"), t.addClass("quickSearchResult-show");
        }),
        o.on("click", (o) => {
            e(".quickSearchResultsWrap").hasClass("show") && 0 === e(o.target).closest(".header-search").length && (e(".quickSearchResultsWrap").removeClass("show"), t.removeClass("quickSearchResult-show"));
}),
                btnClose.on("click", (o) => {
                    o.preventDefault(), o.stopPropagation(), t.hasClass("quickSearchResult-show") && (t.removeClass("quickSearchResult-show"), e(".quickSearchResultsWrap").removeClass("show"));
});
},
initDynamicBrowserTabTitle: function () {
    var e = document.title;
    (window.onblur = function () {
        document.title = "Tu nueva moto te espera ⚡";
    }),
        (window.onfocus = function () {
            document.title = e;
        });
},
initSidebarLogin: function () {
    var o = e("[data-open-auth-sidebar]"),
        a = e(".background-overlay, .bm3-sidebar-close");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("auth-sidebar-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("auth-sidebar-show") && t.removeClass("auth-sidebar-show");
}));
},
initSidebarLocalPickUp: function () {
    var o = e("[data-pickup-open]"),
        a = e(".background-overlay, .bm3-sidebar-close");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("pickup-sidebar-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("pickup-sidebar-show") && t.removeClass("pickup-sidebar-show");
}));
},
initSidebarLangCurrency: function () {
    var o = e("[data-show-language_currency]"),
        a = e(".background-overlay, .bm3-sidebar-close");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("lang-currency-sidebar-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("lang-currency-sidebar-show") && t.removeClass("lang-currency-sidebar-show");
}));
},
initSidebarCart: function () {
    var o = e("[data-open-cart-sidebar]"),
        a = e(".background-overlay, .bm3-sidebar-close");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("cart-sidebar-show"), t.removeClass("quickshop-popup-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("cart-sidebar-show") && t.removeClass("cart-sidebar-show");
}));
},
initSidebarSearch: function () {
    var o = e("[data-mobile-search]"),
        a = e(".background-overlay, .bm3-sidebar-close");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("search_sidebar-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("search_sidebar-show") && t.removeClass("search_sidebar-show");
}));
},
initGlobalCheckbox: function () {
    o.on("change", ".global-checkbox--input", (t) => {
        var o = e(t.currentTarget);
    (btnCheckout = o.parents(".previewCartAction").find(".button-checkout")), t.target.checked ? e(btnCheckout).attr("disabled", !1) : e(btnCheckout).attr("disabled", !0);
});
},
initNotifyInStock: function () {
    var o = e(".is-notify-me"),
        a = e(".background-overlay-popup, .bm3-popup-close");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("notify-me-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("notify-me-show") && t.removeClass("notify-me-show");
}));
},
initQuickShop: function () {
    var o = e("[data-quickshop-popup]"),
        a = e(".background-overlay-popup, .bm3-popup-close");
    o.length &&
        (o.on("click", (e) => {
            e.stopPropagation(), t.addClass("quickshop-popup-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("quickshop-popup-show") && t.removeClass("quickshop-popup-show");
}));
},
initQuickAddToCard: function () {
    var o = e("[data-btn-quickShop-addtocart]"),
        a = e("[data-open-cart-sidebar]");
    o.on("click", (e) => {
        t.removeClass("quickshop-popup-show"), a.trigger("click");
});
},
initEditQuickCart: function () {
    var o = e("[data-open-edit-cart]");
    (btnclose = e(".background-overlay-popup, .bm3-popup-close")),
        o.length &&
            (o.on("click", (e) => {
                e.preventDefault(), e.stopPropagation(), t.addClass("edit-cart-show");
}),
                    btnclose.on("click", (e) => {
                        e.preventDefault(), e.stopPropagation(), t.hasClass("edit-cart-show") && t.removeClass("edit-cart-show");
}));
},
initNewsLetterPopup: function () {
    var a = e(".bm3-newsletter-popup");
    if (a.length > 0) {
        var i = a.data("delay"),
            s = (a.data("expire"), e("[data-close-newsletter-popup],.background-overlay-popup"));
        setTimeout(function () {
            t.addClass("newsletter-show");
        }, i),
            s.click(function (e) {
                t.removeClass("newsletter-show");
            }),
            o.on("change", "#dismiss", (t) => {
                e(t.currentTarget);
        t.target.checked && s.trigger("click");
    });
}
},
initAccountPopup: function () {
    var a = e(".bm3-account-popup");
    if (a.length > 0) {
        var i = a.data("delay"),
            s = (a.data("expire"), e("[data-close-account-popup],.background-overlay-popup"));
        setTimeout(function () {
            t.addClass("account-show");
        }, i),
            s.click(function (e) {
                t.removeClass("account-show");
            }),
            o.on("change", "#dismiss", (t) => {
                e(t.currentTarget);
        t.target.checked && s.trigger("click");
    });
}
},
initSliderAboutUs: function () {
    e("[data-banner-about]").each(function () {
        var t = e(this),
            o = t.find(".bm3-row-slider"),
            a = t.data("item-to-show"),
            i = t.data("item-dots"),
            s = t.data("item-dots-mb"),
            n = t.data("item-arrows"),
            m = t.data("item-arrows-mb"),
            r = '<i class="fa-solid fa-chevron-right"></i>',
            l = '<i class="fa-solid fa-chevron-left"></i>';
        o.length > 0 &&
            (o.hasClass("slick-initialized") ||
                o.slick({
                    mobileFirst: true,
                    adaptiveHeight: false,
                    infinite: false,
                    vertical: false,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    fade: true,
                    dots: s,
                    arrows: m,
                    nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                    prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                    responsive: [{ breakpoint: 1600, settings: { dots: i, arrows: n, slidesToShow: a, slidesToScroll: 1 } }],
                }));
    });
},
initSlideShow: function () {
    e("[data-slide-show]").each(function () {
        var t = e(this),
            o = t.find(".bm3-row-carousel"),
            a = t.data("item-dots"),
            i = t.data("item-dots-mb"),
            s = t.data("item-arrows"),
            n = t.data("item-arrows-mb"),
            r = '<i class="fa-solid fa-chevron-right"></i>',
            l = '<i class="fa-solid fa-chevron-left"></i>';
        o.length > 0 &&
            (o.hasClass("slick-initialized") ||
                o.slick({
                    mobileFirst: true,
                    fade: true,
                    adaptiveHeight: false,
                    infinite: true,
                    vertical: false,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    dots: i,
                    arrows: n,
                    autoplay: true,
                    autoplaySpeed: 3e3,
                    nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                    prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                    responsive: [{ breakpoint: 1200, settings: { dots: a, arrows: s, slidesToShow: 1, slidesToScroll: 1 } }],
                }));
    });
},
initClickedActiveVideoBanner: function () {
    e("[data-video-banner]").length > 0 &&
        e("[data-open-video]").each((t, o) => {
            var i = e(o),
            s = i.parents(".bm3-block-video"),
            n = s.find("[data-close-video]"),
            r = s.find(".modal-content-video");
    i.off("click").on("click", (t) => {
        t.preventDefault(), t.stopPropagation();
    var o = i.data("video");
    if ((e(".video-banner").find(".modal-video-content").remove(), e(".video-banner").removeClass("open_video fixed_video"), i.hasClass("video_youtube")))
        var a = `\n                                <div class="modal-video-content">\n                                    <div class="video_YT video">\n                                        <iframe                                            id="player"                                            type="text/html"                                            width="100%"                                            height="100%"                                            frameborder="0"                                            webkitAllowFullScreen                                            mozallowfullscreen                                            allowFullScreen                                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" title="YouTube video player"                                            src="https://www.youtube.com/embed/${o}?autoplay=1&mute=0"                                            data-video-player>                                        </iframe>                                    </div>\n                                </div>\n                            `;
else
                    a = `\n                                <div class="modal-video-content">\n                                    <div class="video">\n                                        <video controls autoplay class="video">\n                                            <source src="${o}">\n                                        </video>\n                                    </div>\n                                </div>\n                            `;
    r.html(a), s.find(".video-banner").addClass("open_video");
}),
                        n.off("click").on("click", (e) => {
                            e.preventDefault(), e.stopPropagation(), s.find(".modal-video-content").remove(), s.find(".video-banner").removeClass("open_video fixed_video");
}),
a.on("scroll", (t) => {
    var o = r.offset().top,
    a = r.height();
(e(t.currentTarget).scrollTop() < o - a || e(t.currentTarget).scrollTop() > o + a + 20) && (s.find(".video-banner").hasClass("fixed_video") || s.find(".video-banner").addClass("fixed_video"));
});
});
},
initShowPopupShare: function () {
    var t = e(".productView-share");
    if (t.length > 0) {
        var a = t.find(".share-group .button-copy"),
            i = t.find(".share-button"),
            s = e("<input>"),
            n = t.find(".field__input").val();
        i.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.find(".share-button__fallback").toggleClass("is-open");
    }),
            a.on("click", (e) => {
                e.preventDefault(), e.stopPropagation(), t.append(s), s.val(n).select(), document.execCommand("copy"), s.remove(), t.find(".field__input").val("URL copied!");
}),
                    o.on("click", ".share-button__close", (t) => {
                        t.preventDefault(), t.stopPropagation(), e(".share-button__fallback").removeClass("is-open");
}),
o.on("click", (t) => {
    0 === e(t.target).closest(".share-button__fallback").length && e(".share-button__fallback").removeClass("is-open");
});
}
},
initShowPopup: function () {
    e(document).on("click", "[data-open]", (t) => {
        t.preventDefault(), (btnClose = e(".background-overlay"));
    var o = e(t.currentTarget),
        a = o.siblings(".show-popup");
    o.hasClass("active") ? (o.removeClass("active"), a.removeClass("open")) : (o.addClass("active"), a.addClass("open"));
}),
                e(document).on("click", (t) => {
                    t.target.closest("[data-open]") || t.target.closest("[data-popup]") || (e("[data-open]").removeClass("active"), e("[data-popup]").removeClass("open"));
});
},
initCountdown: function () {
    var t = e("[data-countdown]");
    t.length &&
        t.each(function () {
            var t = e(this),
                o = t.data("countdown"),
                a = new Date(o).getTime(),
                i = setInterval(function () {
                    var e = new Date().getTime(),
                        o = a - e;
                    if (o < 0) clearInterval(i), t.remove();
                    else {
                        var s = Math.floor(o / 864e5),
                            n = `0${Math.floor((o % 864e5) / 36e5)}`.slice(-2),
                            r = `0${Math.floor((o % 36e5) / 6e4)}`.slice(-2),
                            l = `0${Math.floor((o % 6e4) / 1e3)}`.slice(-2),
                            c = "";
                        (c = t.hasClass("style-3")
                            ? '<span class="num">' +
                              s +
                              '<span class="text">days</span></span> <span class="num">' +
                              n +
                              ' : </span> <span class="num">' +
                              r +
                              ' : </span> <span class="num">' +
                              l +
                              "</span>"
                            : t.hasClass("style-2")
                            ? '<span class="title-countDown">Limited-Time Offers, End in:</span> <span class="num">' +
                              s +
                              '<span>D : </span></span> <span class="num">' +
                              n +
                              '<span>H : </span></span> <span class="num">' +
                              r +
                              '<span>M  : </span></span> <span class="num">' +
                              l +
                              "<span>S</span></span>"
                            : '<span class="num">' +
                              s +
                              '<span>Day</span></span> <span class="num">' +
                              n +
                              '<span>Hrs</span></span> <span class="num">' +
                              r +
                              '<span>Min</span></span> <span class="num">' +
                              l +
                              "<span>Sec</span></span>"),
                            t.html(c);
                    }
                }, 0);
        });
},
initCartCountDown: function () {
    if (e(".cart-countdown").length) {
        var t,
            o = e(".cart-countdown .count_down").data("time");
        e(document).ready(function () {
            (fiveMinutes = 60 * o),
                (display = document.querySelector("#time")),
                (function (e, o) {
                    var a, i;
                    (t = e),
                        setInterval(function () {
                            (a = parseInt(t / 60, 10)), (i = parseInt(t % 60, 10)), (a = a < 10 ? "0" + a : a), (i = i < 10 ? "0" + i : i), (o.textContent = a + ":" + i), --t < 0 && (t = e);
                        }, 1e3);
                })(fiveMinutes, display);
        });
    }
},
initProductCustomerViewing: function () {
    var t = e(".productView-more").find("[data-customer-view]");
},
initProductSizeChart: function () {
    var o = e("[data-open-size-chart-popup]"),
        a = e(".background-overlay, .bm3-popup-close");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("size-chart-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("size-chart-show") && t.removeClass("size-chart-show");
}));
},
initProductCompareColor: function () {
    var a = e("[data-open-compare-color-popup]"),
        i = e(".background-overlay, .bm3-popup-close"),
        s = e(".bm3-compareColors-image .row");
    a.length > 0 &&
        (a.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("compare-color-show");
}),
                o.on("change", ".swatch-compare-color-option", (t) => {
                    var o = e(t.currentTarget);
(id = o.val()),
    (title = o.siblings().attr("title")),
    (image = o.siblings().attr("data-variant-img")),
    (item = `<div class="bm3-row-item item col-6 col-md-4 col-lg-3 item-${id} item-compare-color"><span class="image"><img src="${image}" alt="${title}"></span><span class="title text-center">${title}</span></div>`),
t.target.checked ? s.append(item) : s.find(`.item-${id}`).remove();
}),
i.on("click", (e) => {
    e.preventDefault(), e.stopPropagation(), t.hasClass("compare-color-show") && t.removeClass("compare-color-show");
}));
},
initProductQuickView: function () {
    var o = e("[data-open-quick-view-popup]"),
        a = e(".background-overlay-popup, [data-close-quickView-popup]");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("quick-view-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("quick-view-show") && t.removeClass("quick-view-show");
}));
},
initProductAskAnExpert: function () {
    var o = e("[data-open-ask-an-expert]"),
        a = e(".background-overlay, .bm3-popup-close");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("ask-an-expert-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("ask-an-expert-show") && t.removeClass("ask-an-expert-show");
}));
},
initCardSwatch: function () {
    var o = e(".card-swatch");
    o.length > 0 &&
        o.find(".item").on("click", (o) => {
            o.preventDefault(), o.stopPropagation();
    var a = e(o.currentTarget),
        i = a.find(".swatch-label"),
        s = i.data("value");
    a.parents(".card-swatch").find(".swatch-label").removeClass("is-active"),
        i.addClass("is-active"),
        t.hasClass("skin-9")
            ? a.parents(".product-card-bottom").find(".card-title [data-change-title]").text(s)
            : a
                  .parents(".product-card-bottom")
                  .find(".card-title [data-change-title]")
                  .text(" - " + s);
});
},
initZoomImage: function () {
    var t = e(".bm3-productView").find("[data-zoom-image]");
    a.width() > 1024 &&
        t.each((t, o) => {
            var i = e(o);
    a.width() > 1024 ? i.zoom({ url: i.attr("data-zoom-image"), touch: false }) : i.trigger("zoom.destroy");
});
},
initProductImageGallery: function () {
    var t = e(".bm3-productView").find(".productView-for"),
        o = e(".bm3-productView").find(".productView-nav"),
        i = o.data("arrow"),
        s = t.data("vertical"),
        l = '<i class="fa-solid fa-chevron-left"></i>',
        r = '<i class="fa-solid fa-chevron-right"></i>';
    o.hasClass("productView-nav-fullwidth")
        ? a.width() < 768 &&
          (o.hasClass("slick-initialized") ||
              o.slick({
                  dots: false,
                  arrows: true,
                  infinite: true,
                  speed: 300,
                  slidesToShow: 1,
                  slidesToScroll: 1,
                  nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                  prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
              }))
        : t.hasClass("slick-initialized") ||
          o.hasClass("slick-initialized") ||
          (o.hasClass("productView-nav-gallery")
              ? o.slick({
                  rows: 2,
                  dots: true,
                  arrows: false,
                  infinite: true,
                  speed: 300,
                  slidesToShow: 2,
                  slidesToScroll: 2,
                  nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                  prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                  responsive: [{ breakpoint: 768, settings: { arrows: true } }],
              })
              : (t.slick({
                  slidesToShow: 5,
                  slidesToScroll: 1,
                  asNavFor: o,
                  arrows: true,
                  dots: false,
                  draggable: false,
                  adaptiveHeight: false,
                  focusOnSelect: true,
                  vertical: s,
                  verticalSwiping: false,
                  infinite: false,
                  nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                  prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                  responsive: [
                      { breakpoint: 1280, settings: { slidesToShow: 4, slidesToScroll: 1 } },
                      { breakpoint: 1025, settings: { vertical: false } },
                  ],
              }),
                o.slick({
                    fade: true,
                    arrows: i,
                    dots: false,
                    infinite: false,
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    nextArrow: '<button type="button" class="slick-arrow slick-next" aria-label="Slide Next">' + r + "</button>",
                    prevArrow: '<button type="button" class="slick-arrow slick-prev" aria-label="Slide Prev">' + l + "</button>",
                    asNavFor: t,
                })));
},
initWishlistActive: function () {
    o.on("click", "[data-wishlist]", (t) => {
        t.preventDefault(), t.stopPropagation();
    var o = e(t.currentTarget);
    o.hasClass("wishlist-added") ? o.removeClass("wishlist-added").find(".text").text("Add to wishlist") : o.addClass("wishlist-added").find(".text").text("Added to wishlist");
});
},
initUpdateValueQuantity: function () {
    e(".previewCartItem-qty .btn-quantity").on("click", (t) => {
        t.preventDefault(), t.stopPropagation();
    var o = e(t.target),
        a = o.siblings('input[name="quantity"]'),
        i = parseInt(a.val());
    o.hasClass("minus") ? i >= 2 && a.val(i - 1) : a.val(i + 1);
});
},
initMenuMobile: function () {
    var o = e("[data-mobile-menu]"),
        a = e(".site-nav-mobile .menu-lv-item.dropdown .menu_mobile_link"),
        i = e(".background-overlay, .bm3-sidebar-close"),
        s = e(".nav-title-mobile");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("menu-sidebar_show");
}),
                i.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("menu-sidebar_show") && t.removeClass("menu-sidebar_show");
}),
a.on("click", (t) => {
    var o = e(t.target);
o.parent().siblings().removeClass("is-open").addClass("is-hidden"), o.parent().removeClass("is-hidden").addClass("is-open");
}),
s.on("click", (t) => {
    t.preventDefault(), t.stopPropagation();
var o = e(t.target),
    a = (o = e(t.currentTarget)).parents(".menu-lv-1"),
    i = o.parents(".menu-lv-2"),
    s = o.parents(".menu-lv-3");
s.length > 0
    ? (s.siblings().removeClass("is-hidden"), s.removeClass("is-open"))
    : i.length > 0
    ? (i.siblings().removeClass("is-hidden"), i.removeClass("is-open"))
    : a.length > 0 && (a.siblings().removeClass("is-hidden"), a.removeClass("is-open"));
}));
},
initShowPopupLookBook: function () {
    o.on("click", "[data-open-lookbook-popup]", (t) => {
        t.preventDefault();
    var o = e(t.currentTarget),
        a = o.siblings(".popup-lookbook");
    o.hasClass("active") ? (o.removeClass("active"), a.removeClass("open")) : (o.addClass("active"), a.addClass("open"));
}),
                o.on("click", (t) => {
                    t.target.closest("[data-open-lookbook-popup]") || t.target.closest("[data-lookbook-popup]") || (e("[data-open-lookbook-popup]").removeClass("active"), e("[data-lookbook-popup]").removeClass("open"));
}),
o.on("click", "[data-close-popup]", (t) => {
    t.preventDefault(), e("[data-open-lookbook-popup]").removeClass("active"), e("[data-lookbook-popup]").removeClass("open");
});
},
initShowPopupSearch: function () {
    var o = e("[data-open-search-popup]"),
        a = e(".background-overlay, [data-close-search-popup]");
    o.length &&
        (o.on("click", (e) => {
            e.preventDefault(), e.stopPropagation(), t.addClass("search-popup-show");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("search-popup-show") && t.removeClass("search-popup-show");
}));
},
initToggleSidebarMobile: function () {
    var a = e(".background-overlay, .bm3-page-sidebar-close");
    o.on("click", "[data-sidebar]", (e) => {
        e.preventDefault(), e.stopPropagation(), t.addClass("open-mobile-sidebar");
}),
                a.on("click", (e) => {
                    e.preventDefault(), e.stopPropagation(), t.hasClass("open-mobile-sidebar") && t.removeClass("open-mobile-sidebar");
});
},
initPriceRangeFilter: function () {
    var t = e(".filter-price");
    if (t.length > 0) {
        var o = t.find("#range-lower"),
            a = t.find("#range-upper");
        a.on("input propertychange", () => {
            var e = parseInt(a.val());
        t.find("#filter__max").val(e);
    }),
            o.on("input propertychange", () => {
                var e = parseInt(o.val());
    t.find("#filter__min").val(e);
});
}
},
initCollapseSidebarBlock: function () {
    var a = window.innerWidth;
    (headingSidebar = e(".sidebarBlock-headingWrapper .sidebarBlock-heading")),
        (blockWrapper = e(".sidebarBlock-content")),
        o.on("click", ".sidebarBlock-headingWrapper .sidebarBlock-heading", (t) => {
            var o = e(t.currentTarget),
            a = o.parent().siblings();
    o.hasClass("is-clicked") ? (o.removeClass("is-clicked"), a.slideUp("slow")) : (o.addClass("is-clicked"), a.slideDown("slow"));
}),
                a < 1025
                    ? (headingSidebar.addClass("is-clicked"), blockWrapper.css("display", "block"))
                    : e(".page-sidebar.page-sidebar--horizontal").length > 0 &&
                      t.on("click", (t) => {
                          0 === e(t.target).closest(".sidebarBlock-headingWrapper").length &&
                              0 === e(t.target).closest(".sidebarBlock-content").length &&
                              headingSidebar.hasClass("is-clicked") &&
                              (headingSidebar.removeClass("is-clicked"), blockWrapper.slideUp("slow"));
});
},
initAddEventViewModeLayout: function () {
    s.setActiveViewModeMediaQuery(),
        t.on("click", ".toolbar-viewAs .icon-mode", function (t) {
            t.preventDefault();
            var o = e(this),
                a = o.closest("[data-view-as]");
            o.hasClass("active") || (a.find(".icon-mode").removeClass("active"), o.addClass("active"), s.viewModeLayout(), s.initMasonry());
        });
},
viewModeLayout: function () {
    var t = e("[data-view-as]").find(".icon-mode.active").data("col"),
        o = e(".collection-template .product-collection"),
        a = o.find(".grid-item"),
        i = "col-12 col-6 col-md-4 col-lg-3 col5";
    if (1 === t) o.removeClass("products-grid").addClass("products-list"), a.removeClass(i).addClass("col-12");
    else
        switch (t) {
            case 2:
                o.removeClass("products-list").addClass("products-grid"), a.removeClass(i).addClass("col-6");
                break;
            case 3:
                o.removeClass("products-list").addClass("products-grid"), a.removeClass(i).addClass("col-6 col-md-4");
                break;
            case 4:
                o.removeClass("products-list").addClass("products-grid"), a.removeClass(i).addClass("col-6 col-md-4 col-lg-3");
                break;
            case 5:
                o.removeClass("products-list").addClass("products-grid"), a.removeClass(i).addClass("col-6 col-md-4 col-lg-3 col5");
        }
},
setActiveViewModeMediaQuery: function () {
    var t = e("[data-view-as]"),
        o = t.find(".icon-mode.active"),
        a = o.data("col"),
        i = window.innerWidth;
    i < 768
        ? (3 !== a && 4 != a && 5 != a) || (o.removeClass("active"), e('[data-col="2"]').addClass("active"))
        : i < 992 && i >= 768
        ? (2 != a && 4 != a && 5 != a) || (o.removeClass("active"), e('[data-col="3"]').addClass("active"))
        : i < 1200 && i >= 992 && ((2 != a && 2 != a && 3 != a && 5 != a) || (o.removeClass("active"), e('[data-col="4"]').addClass("active"))),
        t.length && s.viewModeLayout();
},
initToolbar: function () {
    var o = e(".toolbar");
    if (
        (o.find("[data-toggle]").on("click", (t) => {
            t.preventDefault(), t.stopPropagation();
            var o = e(t.target);
            e(".dropdown-menu").hasClass("is-open") ? e(".dropdown-menu").removeClass("is-open") : o.siblings(".dropdown-menu").addClass("is-open");
                }),
                a.innerWidth() < 1025)
            ) {
                var i = o.offset().top;
                e(window).scroll(function () {
                    e(".sticky-wrapper.is-sticky").outerHeight();
                    var t = e(".header.sticky-down");
                    e(this).scrollTop() > i
                        ? (o.addClass("toolbar-fix"), t.length > 0 ? o.css("top", "50px") : o.css("top", 0))
                        : (e('[data-section-type="collection-template"]').css("padding-top", 0), o.removeClass("toolbar-fix"), o.css("top", 0));
                });
            } else o.removeClass("toolbar-fix"), o.css("top", 0);
t.on("click", (t) => {
    e(".dropdown-menu").removeClass("is-open");
});
},
initMasonry: function () {
    var t = e(".collection-template .product-collection[data-layout]");
    if (t.length) {
        var o = t.data("layout");
        return t.isotope({ layoutMode: o, itemSelector: "[data-gridItem]" });
    }
},
initBeforeYouLeave: function () {
    var o = e("#bm3-leave-sidebar"),
        a = o.data("time"),
        i = 0,
        s = e(".background-overlay, .bm3-sidebar-close");
    if (o.length) {
        setInterval(() => {
            (i += 1) >= 1 && !t.hasClass("before-you-leave-show") && t.addClass("before-you-leave-show");
    }, a);
    t.on("mousemove keydown scroll", () => {
        i = -1;
}),
                    s.on("click", (e) => {
                        t.hasClass("before-you-leave-show") && t.removeClass("before-you-leave-show");
});
}
},
initNotification: function () {
    var o = e(".bm3-notification-popup"),
        a = o.data("time"),
        i = 0,
        s = e(".bm3-popup-close");
    if (o.length) {
        setInterval(() => {
            (i += 1) >= 1 && !t.hasClass("notification-show") ? t.addClass("notification-show") : t.removeClass("notification-show");
    }, a);
    s.on("click", (e) => {
        t.hasClass("notification-show") && t.removeClass("notification-show");
});
}
},
initProductNextPrev: function () {
    var t = e(".product-detail").find(".productView-nextProducts");
    if (t.length > 0 && a.width() > 1024) {
        const o = t.find(".next-prev-modal"),
            a = t.find(".next-prev-icons"),
            i = e("#next-product-modal"),
            s = e("#prev-product-modal");
        a
            .on("mouseover", () => {
                o.addClass("is-show");
    })
    .on("mouseleave", () => {
        o.removeClass("is-show");
}),
                    e(".next-icon", a).on("mouseover", () => {
                        s.removeClass("is-active"), i.addClass("is-active");
}),
e(".prev-icon", a).on("mouseover", () => {
    i.removeClass("is-active"), s.addClass("is-active");
}),
o
    .on("mouseover", () => {
        o.addClass("is-show");
})
                        .on("mouseleave", () => {
                            o.removeClass("is-show");
});
}
},
initProductBUndle: function () {
    var o = e(".bm3-product-bundle .bundle-product-toogle"),
        a = e(".bm3-popup-close");
    o.length &&
        (o.on("click", (t) => {
            t.preventDefault(), t.stopPropagation();
    var o = e(t.currentTarget).parents(".bundlePdItem");
    e(".bm3-product-bundle .bundlePdItem").removeClass("is-open"), o.addClass("is-open");
}),
                a.on("click", (t) => {
                    t.preventDefault(), t.stopPropagation(), e(".bm3-product-bundle .bundlePdItem").removeClass("is-open");
}),
t.on("click", (t) => {
    0 === e(t.target).closest(".bundle-product-options").length && 0 === e(t.target).closest(".bundlePdItem-wrapper").length && e(".bm3-product-bundle .bundlePdItem").removeClass("is-open");
}));
},
initProductVariantChange: function () {
    var t = e(".productView-variants"),
        o = t.find(".bm3-product-item-value"),
        n = t.find("." + o.attr("name"));
    o.on("change", (t) => {
        var o = e(t.currentTarget),
        a = o.val();
    n.find("[data-header-option]").text(a);
});
},
initStickyAddToCart: function () {
    var t = e(".productView-information  .productView-action").offset().top;
    e(window).scroll(function () {
        e(this).scrollTop() > t ? (e(".productView-stickyCart").addClass("show-sticky"), e("body").addClass("show-sticky-cart")) : (e(".productView-stickyCart").removeClass("show-sticky"), e("body").removeClass("show-sticky-cart"));
    });
},
initShowCustomReview: function () {
    var t = e("#tab-review  [data-write-review]"),
        o = e("#tab-review  .spr-form-actions .button");
    (formWriteReview = e("#tab-review .spr-form")),
        formWriteReview.slideUp("slow"),
        t.on("click", (e) => {
            e.stopPropagation(), e.preventDefault(), formWriteReview.slideDown("slow");
}),
                o.on("click", (e) => {
                    e.stopPropagation(), e.preventDefault(), formWriteReview.slideUp("slow");
});
},
initOpenTabsProduct: function () {
    var o = e(".product-layout-full-width"),
        a = o.find(".productView-tabs [data-open-tab]"),
        i = o.find("[data-close-tab]");
    o.length > 0 &&
        (a.on("click", (t) => {
            e(t.currentTarget).siblings().addClass("is-active");
}),
                i.on("click", (t) => {
                    e(".productView-tab ").removeClass("is-active");
}),
t.on("click", (t) => {
    0 === e(t.target).closest(".productView-tab").length && 0 === e(t.target).closest(".productView-tabs [data-open-tab]").length && e(".productView-tab ").removeClass("is-active");
}));
},
initCloseAcceptCookie: function () {
    var t = e(".bm3-accept-cookie-popup");
    t.find("[data-close-accept]").on("click.closecookie", function (e) {
        e.preventDefault(), e.stopPropagation(), t.addClass("is-hidden");
    });
},
intiShowItemGallery: function () {
    var t = e(".block-custom-instagram"),
        o = t.find("[data-load-item]"),
        i = t.find(".bm3-row-item");
    t.length > 0 &&
        (a.width() < 768
            ? (i.slice(0, 2).show(),
              o.on("click", function (e) {
                  e.preventDefault(), t.find(".bm3-row-item:hidden").slice(0, 2).slideDown(), 0 === t.find(".bm3-row-item:hidden").length && o.hide();
              }))
            : a.width() < 1025
            ? (i.slice(0, 3).show(),
              o.on("click", function (e) {
                  e.preventDefault(), t.find(".bm3-row-item:hidden").slice(0, 3).slideDown(), 0 === t.find(".bm3-row-item:hidden").length && o.hide();
              }))
            : (i.slice(0, 5).show(),
              o.on("click", function (e) {
                  e.preventDefault(), t.find(".bm3-row-item:hidden").slice(0, 5).slideDown(), 0 === t.find(".bm3-row-item:hidden").length && o.hide();
              })));
},
initShuffleFilter: function () {
    if (e(".shuffle-filter").length > 0) {
        var t = window.Shuffle;
        (element = e(".shuffle-container")), (sizer = e(".sizer-element")), (tab = e(".shuffle-tabs .tabs .tab"));
        var o = new t(element, { itemSelector: ".masonry-item", sizer: sizer });
        tab.find("a").on("click", function (t) {
            t.preventDefault();
            var a = e(t.currentTarget).parents(".tab");
            (filterVal = a.data("filter")),
                tab.removeClass("is-active"),
                a.addClass("is-active"),
                "all" == filterVal
                    ? o.filter()
                    : o.filter(function (t) {
                        if (null != e(t).data("filter-item")) return -1 != e(t).data("filter-item").indexOf(filterVal);
                    });
        });
    }
},
};
})(jQuery);
